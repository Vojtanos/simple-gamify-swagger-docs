paths:
  /user/{user_id}:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      tags:
        - users
    put:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          $ref: '#/components/responses/UNPROCESSABLE_ENTITY'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      tags:
        - users
    delete:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUser'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      tags:
        - users
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
          minLength: 1
  /user:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      tags:
        - users
    post:
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          $ref: '#/components/responses/UNPROCESSABLE_ENTITY'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      tags:
        - users
  /user/{user_id}/challenge:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserChallenge'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      tags:
        - users
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
          minLength: 1
  /user/{user_id}/challenge/{challenge_id}:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserChallenge'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      tags:
        - users
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
          minLength: 1
      - in: path
        name: challenge_id
        required: true
        schema:
          type: string
          minLength: 1
  /user/{user_id}/point:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPoint'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      tags:
        - users
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
          minLength: 1
  /user/{user_id}/point/{point_id}:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPoint'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      tags:
        - users
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
          minLength: 1
      - in: path
        name: point_id
        required: true
        schema:
          type: string
          minLength: 1
  /user/{user_id}/level/{option}:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCurrentLevel'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      tags:
        - users
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
          minLength: 1
      - in: path
        name: option
        required: true
        schema:
          type: string
          minLength: 1
  /user/{user_id}/action:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAction'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      tags:
        - users
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
          minLength: 1
  /user/{user_id}/action/{action_id}:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      tags:
        - users
    put:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAction'
        '422':
          $ref: '#/components/responses/UNPROCESSABLE_ENTITY'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserAction'
      tags:
        - users
    parameters:
      - in: path
        name: action_id
        required: true
        schema:
          type: string
          minLength: 1
      - in: path
        name: user_id
        required: true
        schema:
          type: string
          minLength: 1
  /leaderboard:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Leaderboard'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      tags:
        - leaderboards
  /leaderboard_points/{point_id}:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaderboardPoint'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      tags:
        - leaderboards
    parameters:
      - in: path
        name: point_id
        required: true
        schema:
          type: string
          minLength: 1
  /leaderboard_actions/{action_id}/{belove_under}/{actions_done}:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaderboardActions'
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      tags:
        - leaderboards
    parameters:
      - in: path
        name: action_id
        required: true
        schema:
          type: string
          minLength: 1
      - in: path
        name: actions_done
        required: true
        schema:
          type: string
          minLength: 1
      - in: path
        name: belove_under
        required: true
        schema:
          type: string
          minLength: 1
info:
  title: SIMPLE-GAMIFY REST API
  version: v1
tags:
  - name: users
    description: Operations on users
  - name: leaderboards
    description: Users stats
openapi: 3.0.3
components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
        code:
          type: integer
          description: Error code
        status:
          type: string
          description: Error name
        errors:
          type: object
          description: Errors
    PaginationMetadata:
      type: object
      properties:
        total:
          type: integer
        total_pages:
          type: integer
        first_page:
          type: integer
        last_page:
          type: integer
        page:
          type: integer
        previous_page:
          type: integer
        next_page:
          type: integer
    User:
      type: object
      properties:
        username:
          type: string
        custom:
          type: object
        id:
          type: string
        email:
          type: string
      required:
        - id
    UpdateUser:
      type: object
      properties:
        username:
          type: string
        custom:
          type: object
        email:
          type: string
    PlainUser:
      type: object
      properties:
        username:
          type: string
        custom:
          type: object
        id:
          type: string
        email:
          type: string
      required:
        - id
    DeleteUser:
      type: object
      properties:
        message:
          type: string
        user:
          $ref: '#/components/schemas/PlainUser'
    PlainChallenge:
      type: object
      properties:
        custom:
          type: object
        id:
          type: string
        description:
          type: string
        title:
          type: string
      required:
        - id
    UserChallenge:
      type: object
      properties:
        challenge:
          $ref: '#/components/schemas/PlainChallenge'
        done:
          type: boolean
    PlainPoint:
      type: object
      properties:
        custom:
          type: object
        id:
          type: string
        description:
          type: string
      required:
        - id
    UserPoint:
      type: object
      properties:
        points_earned:
          type: integer
        point:
          $ref: '#/components/schemas/PlainPoint'
    PlainPointLevel:
      type: object
      properties:
        points_required:
          type: integer
        point:
          $ref: '#/components/schemas/PlainPoint'
    UserCurrentLevel:
      type: object
      properties:
        custom:
          type: object
        level_points_required:
          type: array
          items:
            $ref: '#/components/schemas/PlainPointLevel'
        level_number:
          type: integer
    PlainAction:
      type: object
      properties:
        custom:
          type: object
        id:
          type: string
        description:
          type: string
      required:
        - id
    UserAction:
      type: object
      properties:
        done_rep:
          type: integer
        action:
          $ref: '#/components/schemas/PlainAction'
    UpdateUserAction:
      type: object
      properties:
        value:
          type: integer
    PlainLevel:
      type: object
      properties:
        custom:
          type: object
        level_number:
          type: integer
    Leaderboard:
      type: object
      properties:
        custom:
          type: object
        id:
          type: string
        user_challenges:
          type: array
          items:
            $ref: '#/components/schemas/UserChallenge'
        user_actions:
          type: array
          items:
            $ref: '#/components/schemas/UserAction'
        username:
          type: string
        level:
          $ref: '#/components/schemas/PlainLevel'
        email:
          type: string
        user_points:
          type: array
          items:
            $ref: '#/components/schemas/UserPoint'
      required:
        - id
    LeaderboardPoint:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/PlainUser'
        points_earned:
          type: integer
    LeaderboardActions:
      type: object
      properties:
        done_rep:
          type: integer
        user:
          $ref: '#/components/schemas/PlainUser'
  responses:
    DEFAULT_ERROR:
      description: Default error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UNPROCESSABLE_ENTITY:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
